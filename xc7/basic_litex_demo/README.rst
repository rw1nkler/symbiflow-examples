Basic LiteX Example
===================

This example presents the bitstream generation using the designs
generated by LiteX SoC Builder. The SoC generated in this example contains
VexRiscv CPU, SDRAM controller, and LedChaser IP core.

Prerequisites
-------------

Before generating bitstream using this example, make sure that you correctly
set up the conda environment and installed the SymbiFlow toolchain.

Additionally, you need to install a few python packages related
to LiteX SoC Builder:

.. xc7_litex_req_begin_label

.. code-block::
   :name: xc7-litex-req

   pip3 install -r requirements.txt

.. xc7_litex_req_end_label

Then, you need to download a riscv toolchain to compile binaries.
Additionally, add the toolchain to the system PATH:

.. xc7_litex_toolchain_begin_label

.. code-block::
   :name: xc7-litex-toolchain

   wget https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.1.0-2019.01.0-x86_64-linux-ubuntu14.tar.gz
   tar -xf riscv64-unknown-elf-gcc-8.1.0-2019.01.0-x86_64-linux-ubuntu14.tar.gz
   export PATH=$PATH:$PWD/riscv64-unknown-elf-gcc-8.1.0-2019.01.0-x86_64-linux-ubuntu14/bin/

.. xc7_litex_toolchain_end_label

Generating Bitstream
--------------------

To create a bitstream for an Arty 35T board, use:

.. xc7_litex_build_arty35_begin_label

.. code-block:: bash
   :name: xc7-litex-build-arty35

   TARGET=arty_35 make

.. xc7_litex_build_arty35_end_label

To create a bitstream for an Arty 100T board, use:

.. xc7_litex_build_arty100_begin_label

.. code-block:: bash
   :name: xc7-litex-build-arty100

   TARGET=arty_100 make

.. xc7_litex_build_arty100_end_label

Expected output
---------------

After loading the bitstream to the Arty board and connecting to the board's
UART using ``115200`` baudrate, you should observe the following output:

.. code-block::

           __   _ __      _  __
          / /  (_) /____ | |/_/
         / /__/ / __/ -_)>  <
        /____/_/\__/\__/_/|_|
      Build your hardware, easily!

    (c) Copyright 2012-2020 Enjoy-Digital
    (c) Copyright 2007-2015 M-Labs

    BIOS built on Nov 24 2020 11:50:53
    BIOS CRC passed (fafab798)

    Migen git sha1: --------
    LiteX git sha1: --------

   --=============== SoC ==================--
   CPU:		VexRiscv @ 80MHz
   BUS:		WISHBONE 32-bit @ 4GiB
   CSR:		32-bit data
   ROM:		64KiB
   SRAM:		8KiB
   L2:		8KiB
   SDRAM:		262144KiB 16-bit @ 640MT/s (CL-6 CWL-5)

   --========== Initialization ============--
   Initializing SDRAM @0x40000000...
   Switching SDRAM to software control.
   Write latency calibration:
   m0:0 m1:0
   Read leveling:
     m0, b0: |00000000000000000000000000000000| delays: -
     m0, b1: |00000000000000000000000001111111| delays: 28+-03
     m0, b2: |00000000000000000000000000000000| delays: -
     m0, b3: |00000000000000000000000000000000| delays: -
     m0, b4: |00000000000000000000000000000000| delays: -
     m0, b5: |00000000000000000000000000000000| delays: -
     m0, b6: |00000000000000000000000000000000| delays: -
     m0, b7: |00000000000000000000000000000000| delays: -
     best: m0, b01 delays: 28+-03
     m1, b0: |00000000000000000000000000000000| delays: -
     m1, b1: |00000000000000000000000001111111| delays: 28+-03
     m1, b2: |00000000000000000000000000000000| delays: -
     m1, b3: |00000000000000000000000000000000| delays: -
     m1, b4: |00000000000000000000000000000000| delays: -
     m1, b5: |00000000000000000000000000000000| delays: -
     m1, b6: |00000000000000000000000000000000| delays: -
     m1, b7: |00000000000000000000000000000000| delays: -
     best: m1, b01 delays: 28+-03
   Switching SDRAM to hardware control.
   Memtest at 0x40000000 (2MiB)...
     Write: 0x40000000-0x40200000 2MiB
      Read: 0x40000000-0x40200000 2MiB
   Memtest OK
   Memspeed at 0x40000000 (2MiB)...
     Write speed: 21MiB/s
      Read speed: 17MiB/s

   --============== Boot ==================--
   Booting from serial...
   Press Q or ESC to abort boot completely.
   sL5DdSMmkekro
   Timeout
   No boot medium found

   --============= Console ================--
